{"ast":null,"code":"var _jsxFileName = \"/Users/williamzemingliu/liu_family_gallery/src/Components/App/App.js\";\nimport React from 'react';\nimport './App.css';\nimport YouTubeVideoListHolder from '../YouTubeVideoListHolder/YouTubeVideoListHolder';\nimport Header from '../Header/Header';\n\nconst sqlite3 = require('sqlite3');\n\nconst db = new sqlite3.Datebase('../../../server/db/liu_family_website_links.db');\n/*\n// Your code below:\ndb.run(), db.each(), db.get(), and db.all(), db.serialize()\n\ndb.all(\"SELECT * FROM Dog\", (error, rows) => {\n  printQueryResults(rows.find(row => row.id === 1));\n});\n\ndb.get('SELECT * FROM TemperatureData WHERE year=1999', (error, row) => {\n  printQueryResults(row);\n})\ndb.all(\"SELECT * FROM Dog WHERE fur_length = $furLength AND fur_color = $furColor\", \n  {\n    $furLength: length,\n    $furColor: color\n  }, \n  (error, rows) => {\n    printQueryResults(rows);\n  }\n);\n\n\n*/\n\nclass App extends React.Component {\n  /*\n  constructor(props){\n    super(props);\n    this.state = {\n      video_list: [];\n    };\n  }\n   generateList() {\n  \n  }\n   render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <YouTubeVideoListHolder video_list={this.state.video_list}/>\n      </div>\n    );\n  }\n  */\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(YouTubeVideoListHolder, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/williamzemingliu/liu_family_gallery/src/Components/App/App.js"],"names":["React","YouTubeVideoListHolder","Header","sqlite3","require","db","Datebase","App","Component","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AAEA,OAAOC,sBAAP,MAAmC,kDAAnC;AACA,OAAOC,MAAP,MAAmB,kBAAnB;;AAGA,MAAMC,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,EAAE,GAAG,IAAIF,OAAO,CAACG,QAAZ,CAAqB,gDAArB,CAAX;AAEA;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,MAAMC,GAAN,SAAkBP,KAAK,CAACQ,SAAxB,CAAkC;AAChC;;;;;;;;;;;;;;;;;;;AAsBAC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,sBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AA9B+B;;AAiClC,eAAeF,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\n\nimport YouTubeVideoListHolder from '../YouTubeVideoListHolder/YouTubeVideoListHolder';\nimport Header from '../Header/Header';\n\n\nconst sqlite3 = require('sqlite3');\nconst db = new sqlite3.Datebase('../../../server/db/liu_family_website_links.db')\n\n/*\n// Your code below:\ndb.run(), db.each(), db.get(), and db.all(), db.serialize()\n\ndb.all(\"SELECT * FROM Dog\", (error, rows) => {\n  printQueryResults(rows.find(row => row.id === 1));\n});\n\ndb.get('SELECT * FROM TemperatureData WHERE year=1999', (error, row) => {\n  printQueryResults(row);\n})\ndb.all(\"SELECT * FROM Dog WHERE fur_length = $furLength AND fur_color = $furColor\", \n  {\n    $furLength: length,\n    $furColor: color\n  }, \n  (error, rows) => {\n    printQueryResults(rows);\n  }\n);\n\n\n*/\n\nclass App extends React.Component {\n  /*\n  constructor(props){\n    super(props);\n    this.state = {\n      video_list: [];\n    };\n  }\n\n  generateList() {\n  \n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <YouTubeVideoListHolder video_list={this.state.video_list}/>\n      </div>\n    );\n  }\n  */\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <YouTubeVideoListHolder />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}